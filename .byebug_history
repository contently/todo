exit
Task.all
assigns(:tasks).map{|task| task.completed}
assign(:tasks).to_a.map{|task| task.completed}
assign(:tasks).map{|task| task.completed}
task2
exit
assigns(:tasks).to_a.map{|task| task.completed}
assigns(:tasks).to_a
assigns(:tasks).first
assigns(:tasks).fist
assigns(:tasks).class
assigns(:tasks).map({|task| task})
assigns(:tasks).map({|task| return task.completed})
assigns(:tasks).map({|task| task.completed})
assigns(:tasks).completed
assigns(:tasks => {:completed => false})
assigns(:tasks => :completed)
assigns(:tasks => {:completed})
assigns(:tasks)
response.tasks
response.@tasks
response[@tasks]
response
@tasks
exit
params[:completed].class.to_boolean
params[:completed].class.to_bool
params[:completed].class
params[:completed]
params[:query]
params
comp_status
c
params
comp_status
c
comp_status
exit
list.id
owner
c
exit
list.tasks
list = owner.lists.first
list = owner.lists
owner.tasks
Task.all
Tasks.each
owner.lists.tasks
owner.lists
owner
user
exit
Task.all
exit
List.all
Task.all
exit
list.id
list
c
jill_list.id
jill_list
jill
c
@list.valid?
@list
c
params
list_params
@list
c
@list.valid?
c
@list.valid?
@list
